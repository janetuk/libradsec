HACKING file for libradsec (in Emacs -*- org -*- mode).

Status as of libradsec-0.0.2.dev (2011-03-24).

* Build instructions
cd libradsec/lib
sh autogen.sh
./configure #--enable-tls
make

examples/client -r examples/client.conf blocking-tls; echo $?

* Design of the API
- There are three usage modes
  - Application use the send and receive calls (blocking mode)
  - Application registers callbacks and runs the libevent dispatch
    loop (a.k.a. user dispatch mode)
  - Application runs its own event loop, using fd's for select and
    performs I/O using the libradsec send/receive calls
    (a.k.a. on-your-own mode)
- User chooses allocation regime

* Dependencies
Details apply to Ubuntu 10.10.

- libconfuse (2.7-1)
  sudo apt-get install libconfuse-dev libconfuse0
- libevent from source (release-2.0.10-stable)
  git clone --branch release-2.0.10-stable git://levent.git.sourceforge.net/gitroot/levent/levent
  cd levent; sh autogen.sh && ./configure --enable-openssl
  make && sudo make install
- OpenSSL (optional, for TLS and DTLS support)
  sudo apt-get install libssl-dev
  
* Functionality and quality
** Not well tested
- reading config file
- [TCP] short read
- [TCP] short write
- [TLS] basic tls support
** Known issues
- error stack is only one entry deep
- custom allocation scheme is not used in all places
** Not implemented
- server failover
- [TLS] verification of CN
- [TLS] preshared key support
- [DTLS] support

* Found a bug?
Please report it.  This is how we improve the quality of the code.

If possible, please build the library with DEBUG defined (CFLAGS="-g
-DDEBUG") and reproduce the problem.  With DEBUG defined, lots of
asserts are enabled which might give a hint about what's gone wrong.

Running the library under gdb is another good idea.  If you experience
a crash, catching it in gdb and providing a backtrace is highly
valuable for debugging.

Contact: mailto:linus+libradsec@nordu.net
